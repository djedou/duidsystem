{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"duidSystem : Djedou UI Design System duidSystem est un Syst\u00e8me de Design d'Interface Utilisateur pour les projects en React. La plupart des composants duidSystem correspondent aux tags HTML. Les composants react naissent et meurent, les composants duidSystem naissent et meurent avec leur style appropri\u00e9. Comment installer DuidHtml npm install duidsystem - duidhtml Exemple d'utilisation Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 import React , { Component } from \"react\" ; import Form from \"duidsystem-duidhtml/Form\" ; import DuidStyle from \"duidsystem-duidhtml/DuidStyle\" ; class Main extends Component { render (){ return ( < div > < Form style = \"test\" > < p > djed form < /p> < /Form> < DuidStyle > { ` .test{ color: blue; } ` } < /DuidStyle> < /div> ) } } export default Main ; Comment styler les composants duidsystem Premi\u00e8re Methode : DuidStyle Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 import React , { Component } from \"react\" ; import Form from \"duidsystem-duidhtml/Form\" ; import DuidStyle from \"duidsystem-duidhtml/DuidStyle\" ; class Main extends Component { render (){ return ( < div > < Form style = \"test\" > < p > djed form < /p> < /Form> < DuidStyle > { ` .test{ color: blue; } ` } < /DuidStyle> < /div> ) } } export default Main ; Deuxi\u00e8me Methode : @material - ui / styles Vous pouvez utiliser @material-ui/styles pour styler les composants duidsystem. Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import React , { Component } from \"react\" ; import Form from \"duidsystem-duidhtml/Form\" ; import { withStyles } from '@material-ui/styles' ; const styles = { root : { color : 'red' , }, }; class Main extends Component { render (){ const { classes } = this . props ; return ( < div > < Form style = { classes . root } > < p > djed form < /p> < /Form> < /div> ) } } export default withStyles ( styles )( Main ); A noter note Le composant DuidStyle a une port\u00e9e globale Repo GitHub duidSystem: Djedou UI Design System Auteur Nom: Aman Prenom: Djedou Arnaud Email: djedouarnaud.aman@gmail.com LinkedLn: linkedin GitHub: Profil","title":"Home"},{"location":"#duidsystem-djedou-ui-design-system","text":"duidSystem est un Syst\u00e8me de Design d'Interface Utilisateur pour les projects en React. La plupart des composants duidSystem correspondent aux tags HTML. Les composants react naissent et meurent, les composants duidSystem naissent et meurent avec leur style appropri\u00e9.","title":"duidSystem : Djedou UI Design System"},{"location":"#comment-installer","text":"","title":"Comment installer"},{"location":"#duidhtml","text":"npm install duidsystem - duidhtml","title":"DuidHtml"},{"location":"#exemple-dutilisation","text":"Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 import React , { Component } from \"react\" ; import Form from \"duidsystem-duidhtml/Form\" ; import DuidStyle from \"duidsystem-duidhtml/DuidStyle\" ; class Main extends Component { render (){ return ( < div > < Form style = \"test\" > < p > djed form < /p> < /Form> < DuidStyle > { ` .test{ color: blue; } ` } < /DuidStyle> < /div> ) } } export default Main ;","title":"Exemple d'utilisation"},{"location":"#comment-styler-les-composants-duidsystem","text":"","title":"Comment styler les composants duidsystem"},{"location":"#premiere-methode-duidstyle","text":"Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 import React , { Component } from \"react\" ; import Form from \"duidsystem-duidhtml/Form\" ; import DuidStyle from \"duidsystem-duidhtml/DuidStyle\" ; class Main extends Component { render (){ return ( < div > < Form style = \"test\" > < p > djed form < /p> < /Form> < DuidStyle > { ` .test{ color: blue; } ` } < /DuidStyle> < /div> ) } } export default Main ;","title":"Premi\u00e8re Methode : DuidStyle"},{"location":"#deuxieme-methode-material-uistyles","text":"Vous pouvez utiliser @material-ui/styles pour styler les composants duidsystem. Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import React , { Component } from \"react\" ; import Form from \"duidsystem-duidhtml/Form\" ; import { withStyles } from '@material-ui/styles' ; const styles = { root : { color : 'red' , }, }; class Main extends Component { render (){ const { classes } = this . props ; return ( < div > < Form style = { classes . root } > < p > djed form < /p> < /Form> < /div> ) } } export default withStyles ( styles )( Main );","title":"Deuxi\u00e8me Methode : @material-ui/styles"},{"location":"#a-noter","text":"note Le composant DuidStyle a une port\u00e9e globale","title":"A noter"},{"location":"#repo-github","text":"duidSystem: Djedou UI Design System","title":"Repo GitHub"},{"location":"#auteur","text":"Nom: Aman Prenom: Djedou Arnaud Email: djedouarnaud.aman@gmail.com LinkedLn: linkedin GitHub: Profil","title":"Auteur"},{"location":"duidHtml/formContainers/","text":"FormContainers Form Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 import React , { Component } from \"react\" ; import { Form , DuidStyle } from \"duidsystem-duidhtml\" ; /* ou encore import Form from \"duidsystem-duidhtml/Form\"; import DuidStyle from \"duidsystem-duidhtml/DuidStyle\"; */ class Main extends Component { render (){ return ( < div > < Form style = \"test\" > < p > djed form < /p> < /Form> < DuidStyle > { ` .test{ color: blue; } ` } < /DuidStyle> < /div> ) } } export default Main ; Les props du composant Form Props Valeurs ou Types style de type objet ou string action de type string method get ou post name de type string enctype application / x - www - form - urlencoded ou multipart / form - data ou text / plain target _self ou _parent ou _top ou _blank acceptCharset de type string novalidate de type bool\u00e9en autocomplete on ou off onSubmit de type function onReset de type function ModalForm Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 import React , { Component } from \"react\" ; import ModalForm from \"duidsystem-duidhtml/ModalForm\" ; import { withStyles } from '@material-ui/styles' ; const styles = { root : { color : 'red' , }, modal : { boxShadow : \" 12px 12px 2px 1px rgba(0, 0, 255, .2)\" , } }; class Main extends Component { render (){ const { classes } = this . props ; return ( < div > < ModalForm modalStyle = { classes . modal } formStyle = { classes . root } name = \"modalTest\" > < p > duidhtml Modalform < /p> < /ModalForm> < /div> ) } } export default withStyles ( styles )( Main ); Les props du composant ModalForm Props Valeurs ou Types modalStyle de type objet ou string formStyle de type objet ou string action de type string name de type string enctype application / x - www - form - urlencoded ou multipart / form - data ou text / plain target _self ou _parent ou _top ou _blank acceptCharset de type string novalidate de type bool\u00e9en autocomplete on ou off Button Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import React , { Component } from \"react\" ; import Button from \"duidsystem-duidhtml/Button\" ; import { withStyles } from '@material-ui/styles' ; const styles = { root : { color : 'white' , backgroundColor : \"blue\" , } }; class Main extends Component { render (){ const { classes } = this . props ; return ( < div > < Button style = { classes . root } > duidhtml Button < /Button> < /div> ) } } export default withStyles ( styles )( Main ); Les props du composant Button Props Valeurs ou Types style de type objet ou string name de type string value de type string disabled de type bool\u00e9en form de type string autofocus de type bool\u00e9en formaction de type string formmethod get ou post ou put ou delete formenctype application / x - www - form - urlencoded ou multipart / form - data ou text / plain formtarget _self ou _parent ou _top ou _blank acceptCharset de type string formnovalidate de type bool\u00e9en autocomplete on ou off onClick de type function onBlur de type function onFocus de type function ButtonReset Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import React , { Component } from \"react\" ; import ButtonReset from \"duidsystem-duidhtml/ButtonReset\" ; import { withStyles } from '@material-ui/styles' ; const styles = { root : { color : 'white' , backgroundColor : \"blue\" , } }; class Main extends Component { render (){ const { classes } = this . props ; return ( < div > < ButtonReset style = { classes . root } > duidhtml ButtonReset < /ButtonReset> < /div> ) } } export default withStyles ( styles )( Main ); Les props du composant ButtonReset Props Valeurs ou Types style de type objet ou string name de type string value de type string disabled de type bool\u00e9en form de type string autofocus de type bool\u00e9en formaction de type string formmethod get ou post ou put ou delete formenctype application / x - www - form - urlencoded ou multipart / form - data ou text / plain formtarget _self ou _parent ou _top ou _blank acceptCharset de type string formnovalidate de type bool\u00e9en autocomplete on ou off ButtonSubmit Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import React , { Component } from \"react\" ; import ButtonSubmit from \"duidsystem-duidhtml/ButtonSubmit\" ; import { withStyles } from '@material-ui/styles' ; const styles = { root : { color : 'white' , backgroundColor : \"blue\" , } }; class Main extends Component { render (){ const { classes } = this . props ; return ( < div > < ButtonSubmit style = { classes . root } > duidhtml ButtonSubmit < /ButtonSubmit> < /div> ) } } export default withStyles ( styles )( Main ); Les props du composant ButtonSubmit Props Valeurs ou Types style de type objet ou string name de type string value de type string disabled de type bool\u00e9en form de type string autofocus de type bool\u00e9en formaction de type string formmethod get ou post ou put ou delete formenctype application / x - www - form - urlencoded ou multipart / form - data ou text / plain formtarget _self ou _parent ou _top ou _blank acceptCharset de type string formnovalidate de type bool\u00e9en autocomplete on ou off DropDawDatalist Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 import React , { Component } from \"react\" ; import DropDawDatalist from \"duidsystem-duidhtml/DropDawDatalist\" ; import { withStyles } from '@material-ui/styles' ; const styles = { input : { color : 'blue' , }, label : { color : 'green' , } }; class Main extends Component { constructor ( props ){ super ( props ); this . state = { optionItems : [ \"math\" , \"chimie\" , \"physique\" , \"histoire\" ], inputProps : { list : \"cours\" , id : \"forLabel\" , }, datalistProps : { id : \"cours\" }, labelProps : { htmlFor : \"forLabel\" , name : \"mes cours \" } } } render (){ const { classes } = this . props ; return ( < div > < DropDawDatalist labelProps = { this . state . labelProps } optionItems = { this . state . optionItems } inputProps = { this . state . inputProps } datalistProps = { this . state . datalistProps } inputStyle = { classes . input } labelStyle = { classes . label } /> < /div> ) } } export default withStyles ( styles )( Main ); Les props du composant DropDawDatalist Props Valeurs ou Types labelProps un object de propri\u00e9t\u00e9s htmlFor et name optionItems une liste de string inputProps un object de propri\u00e9t\u00e9s list et id datalistProps un object de propri\u00e9t\u00e9 id inputStyle de type objet ou string labelStyle de type objet ou string Le id dans datalistProps doit avoir la m\u00eame valeur que le list dans inputProps Le id dans inputProps doit avoir la m\u00eame valeur que le htmlFor dans labelProps DropDawSelect Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 import React , { Component } from \"react\" ; import { DropDawSelect , DuidStyle } from \"duidsystem-duidhtml\" ; class Main extends Component { constructor ( props ){ super ( props ); this . state = { optionItems : [ { value : \"math\" , optionItemProps : { label : \"math\" , disabled : \"\" , } }, { value : \"chimie\" , optionItemProps : { disabled : { true : true }, } }, { value : \"physique\" , optionItemProps : {} }, { value : \"histoire\" , optionItemProps : {} } ], selectProps : { id : \"cours\" }, labelProps : { htmlFor : \"cours\" , name : \"mes cours \" , } } } render (){ const { classes } = this . props ; return ( < div > < DuidDropDawSelect labelProps = { this . state . labelProps } labelStyle = { classes . label } optionItems = { this . state . optionItems } selectProps = { this . state . selectProps } selectStyle = { classes . select } /> < DuidStyle > { ` .label{ color: blue; } .select{ color: green; } ` } < /DuidStyle> < /div> ) } } export default Main ; Les props du composant DropDawSelect Props Valeurs ou Types labelProps un object de propri\u00e9t\u00e9s htmlFor et name optionItems une liste de object et chaque objet a value et optionItemProps selectProps un object de propri\u00e9t\u00e9 id selectStyle de type objet ou string labelStyle de type objet ou string Le id dans selectProps doit avoir la m\u00eame valeur que le htmlFor dans labelProps DropDawSelectGroup Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 import React , { Component } from \"react\" ; import { DropDawSelectGroup , DuidStyle } from \"duidsystem-duidhtml\" ; class Main extends Component { constructor ( props ){ super ( props ); this . state = { optGroupItems : [ { groupId : 1 , groupProps : { label : \"science\" , }, optItems : [ { optId : 1 , value : \"math\" , optProps : {} }, { optId : 2 , value : \"chimie\" , optProps : { disabled : { true : true }, } }, ] }, { groupId : 2 , groupProps : { label : \"litt\u00e9rature\" , }, optItems : [ { optId : 1 , value : \"fran\u00e7ais\" , optProps : {} }, { optId : 2 , value : \"anglais\" , optProps : {} }, ] } ], selectProps : { name : \"cours\" , id : \"cours\" }, labelProps : { htmlFor : \"cours\" , name : \"mes cours \" } } } render (){ const { classes } = this . props ; return ( < div > < DropDawSelectGroup labelProps = { this . state . labelProps } labelStyle = \"label\" optGroupItems = { this . state . optGroupItems } selectProps = { this . state . selectProps } selectStyle = \"select\" /> < DuidStyle > { ` .label{ color: blue; } .select{ color: green; } ` } < /DuidStyle> < /div> ) } } export default Main ; Les props du composant DropDawSelectGroup Props Valeurs ou Types labelProps un object de propri\u00e9t\u00e9s htmlFor et name optGroupItems une liste de object et chaque objet a groupId , groupProp , optItems selectProps un object de propri\u00e9t\u00e9s id et name selectStyle de type objet ou string labelStyle de type objet ou string Le id dans selectProps doit avoir la m\u00eame valeur que le htmlFor dans labelProps FormFieldset Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 import React , { Component } from \"react\" ; import { FormFieldset , DuidStyle } from \"duidsystem-duidhtml\" ; class Main extends Component { constructor ( props ){ super ( props ); this . state = { fieldsetProps : { form : \"\" }, legendProps : { id : \"\" }, legendTitle : \"FormFieldset\" } } render (){ return ( < div > < FormFieldset fieldsetStyle = \"field\" fieldsetProps = { this . state . fieldsetProps } legendStyle = \"legend\" legendTitle = { this . state . legendTitle } legendProps = { this . state . legendProps } > < p > for test here < /p> < /FormFieldset> < DuidStyle > { ` .field{ color: blue; } .legend{ color: green; } ` } < /DuidStyle> < /div> ) } } export default Main ; Les props du composant FormFieldset Props Valeurs ou Types fieldsetProps un object de propri\u00e9t\u00e9s form , name et disabled legendProps un object de propri\u00e9t\u00e9s id legendTitle de type string fieldsetStyle de type objet ou string legendStyle de type objet ou string fieldsetProps et legendProps doivent avoir au moins un attribut m\u00eame si pas de valeur InputButton Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 import React , { Component } from \"react\" ; import { InputButton } from \"duidsystem-duidhtml\" ; import { withStyles } from '@material-ui/styles' ; const styles = { input : { color : 'blue' , } }; class Main extends Component { constructor ( props ){ super ( props ); this . state = { name : \"duidbtn\" , } } render (){ const { classes } = this . props ; return ( < div > < InputButton name = { this . state . name } style = { classes . input } /> < /div> ) } } export default withStyles ( styles )( Main ); Les props du composant InputButton Props Valeurs ou Types onClick de type function onBlur de type function onFocus de type function onSubmit de type function name de type string form de type string disabled de type bool\u00e9en autofocus de type bool\u00e9en style de type objet ou string InputCheckbox Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 import React , { Component } from \"react\" ; import { InputCheckbox , DuidStyle } from \"duidsystem-duidhtml\" ; class Main extends Component { constructor ( props ){ super ( props ); this . state = { value : \"duid\" , labelProps : {} } } render (){ const { classes } = this . props ; return ( < div > < InputCheckbox value = { this . state . value } labelProps = { this . state . labelProps } style = \"checkbox\" /> < DuidStyle > { ` .checkbox{ color: green; } ` } < /DuidStyle> < /div> ) } } export default Main ; Les props du composant InputButton Props Valeurs ou Types onClick de type function onBlur de type function onFocus de type function name de type string value de type string form de type string disabled de type bool\u00e9en autofocus de type bool\u00e9en style de type objet ou string required de type bool\u00e9en checked de type bool\u00e9en labelProps de type objet InputColor Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 import React , { Component } from \"react\" ; import { InputColor , DuidStyle } from \"duidsystem-duidhtml\" ; class Main extends Component { constructor ( props ){ super ( props ); this . state = { colorTitle : \"duid input colors \" , labelProps : { htmlFor : \"color\" } } } render (){ return ( < div > < InputColor colorTitle = { this . state . colorTitle } style = \"color\" labelProps = { this . state . labelProps } /> < DuidStyle > { ` .color{ color: green; } ` } < /DuidStyle> < /div> ) } } export default Main ; Les props du composant InputColor Props Valeurs ou Types name de type string value de type string form de type string disabled de type bool\u00e9en autofocus de type bool\u00e9en style de type objet ou string list de type string colorTitle de type String labelProps de type objet","title":"FormContainers"},{"location":"duidHtml/formContainers/#formcontainers","text":"","title":"FormContainers"},{"location":"duidHtml/formContainers/#form","text":"Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 import React , { Component } from \"react\" ; import { Form , DuidStyle } from \"duidsystem-duidhtml\" ; /* ou encore import Form from \"duidsystem-duidhtml/Form\"; import DuidStyle from \"duidsystem-duidhtml/DuidStyle\"; */ class Main extends Component { render (){ return ( < div > < Form style = \"test\" > < p > djed form < /p> < /Form> < DuidStyle > { ` .test{ color: blue; } ` } < /DuidStyle> < /div> ) } } export default Main ; Les props du composant Form Props Valeurs ou Types style de type objet ou string action de type string method get ou post name de type string enctype application / x - www - form - urlencoded ou multipart / form - data ou text / plain target _self ou _parent ou _top ou _blank acceptCharset de type string novalidate de type bool\u00e9en autocomplete on ou off onSubmit de type function onReset de type function","title":"Form"},{"location":"duidHtml/formContainers/#modalform","text":"Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 import React , { Component } from \"react\" ; import ModalForm from \"duidsystem-duidhtml/ModalForm\" ; import { withStyles } from '@material-ui/styles' ; const styles = { root : { color : 'red' , }, modal : { boxShadow : \" 12px 12px 2px 1px rgba(0, 0, 255, .2)\" , } }; class Main extends Component { render (){ const { classes } = this . props ; return ( < div > < ModalForm modalStyle = { classes . modal } formStyle = { classes . root } name = \"modalTest\" > < p > duidhtml Modalform < /p> < /ModalForm> < /div> ) } } export default withStyles ( styles )( Main ); Les props du composant ModalForm Props Valeurs ou Types modalStyle de type objet ou string formStyle de type objet ou string action de type string name de type string enctype application / x - www - form - urlencoded ou multipart / form - data ou text / plain target _self ou _parent ou _top ou _blank acceptCharset de type string novalidate de type bool\u00e9en autocomplete on ou off","title":"ModalForm"},{"location":"duidHtml/formContainers/#button","text":"Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import React , { Component } from \"react\" ; import Button from \"duidsystem-duidhtml/Button\" ; import { withStyles } from '@material-ui/styles' ; const styles = { root : { color : 'white' , backgroundColor : \"blue\" , } }; class Main extends Component { render (){ const { classes } = this . props ; return ( < div > < Button style = { classes . root } > duidhtml Button < /Button> < /div> ) } } export default withStyles ( styles )( Main ); Les props du composant Button Props Valeurs ou Types style de type objet ou string name de type string value de type string disabled de type bool\u00e9en form de type string autofocus de type bool\u00e9en formaction de type string formmethod get ou post ou put ou delete formenctype application / x - www - form - urlencoded ou multipart / form - data ou text / plain formtarget _self ou _parent ou _top ou _blank acceptCharset de type string formnovalidate de type bool\u00e9en autocomplete on ou off onClick de type function onBlur de type function onFocus de type function","title":"Button"},{"location":"duidHtml/formContainers/#buttonreset","text":"Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import React , { Component } from \"react\" ; import ButtonReset from \"duidsystem-duidhtml/ButtonReset\" ; import { withStyles } from '@material-ui/styles' ; const styles = { root : { color : 'white' , backgroundColor : \"blue\" , } }; class Main extends Component { render (){ const { classes } = this . props ; return ( < div > < ButtonReset style = { classes . root } > duidhtml ButtonReset < /ButtonReset> < /div> ) } } export default withStyles ( styles )( Main ); Les props du composant ButtonReset Props Valeurs ou Types style de type objet ou string name de type string value de type string disabled de type bool\u00e9en form de type string autofocus de type bool\u00e9en formaction de type string formmethod get ou post ou put ou delete formenctype application / x - www - form - urlencoded ou multipart / form - data ou text / plain formtarget _self ou _parent ou _top ou _blank acceptCharset de type string formnovalidate de type bool\u00e9en autocomplete on ou off","title":"ButtonReset"},{"location":"duidHtml/formContainers/#buttonsubmit","text":"Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import React , { Component } from \"react\" ; import ButtonSubmit from \"duidsystem-duidhtml/ButtonSubmit\" ; import { withStyles } from '@material-ui/styles' ; const styles = { root : { color : 'white' , backgroundColor : \"blue\" , } }; class Main extends Component { render (){ const { classes } = this . props ; return ( < div > < ButtonSubmit style = { classes . root } > duidhtml ButtonSubmit < /ButtonSubmit> < /div> ) } } export default withStyles ( styles )( Main ); Les props du composant ButtonSubmit Props Valeurs ou Types style de type objet ou string name de type string value de type string disabled de type bool\u00e9en form de type string autofocus de type bool\u00e9en formaction de type string formmethod get ou post ou put ou delete formenctype application / x - www - form - urlencoded ou multipart / form - data ou text / plain formtarget _self ou _parent ou _top ou _blank acceptCharset de type string formnovalidate de type bool\u00e9en autocomplete on ou off","title":"ButtonSubmit"},{"location":"duidHtml/formContainers/#dropdawdatalist","text":"Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 import React , { Component } from \"react\" ; import DropDawDatalist from \"duidsystem-duidhtml/DropDawDatalist\" ; import { withStyles } from '@material-ui/styles' ; const styles = { input : { color : 'blue' , }, label : { color : 'green' , } }; class Main extends Component { constructor ( props ){ super ( props ); this . state = { optionItems : [ \"math\" , \"chimie\" , \"physique\" , \"histoire\" ], inputProps : { list : \"cours\" , id : \"forLabel\" , }, datalistProps : { id : \"cours\" }, labelProps : { htmlFor : \"forLabel\" , name : \"mes cours \" } } } render (){ const { classes } = this . props ; return ( < div > < DropDawDatalist labelProps = { this . state . labelProps } optionItems = { this . state . optionItems } inputProps = { this . state . inputProps } datalistProps = { this . state . datalistProps } inputStyle = { classes . input } labelStyle = { classes . label } /> < /div> ) } } export default withStyles ( styles )( Main ); Les props du composant DropDawDatalist Props Valeurs ou Types labelProps un object de propri\u00e9t\u00e9s htmlFor et name optionItems une liste de string inputProps un object de propri\u00e9t\u00e9s list et id datalistProps un object de propri\u00e9t\u00e9 id inputStyle de type objet ou string labelStyle de type objet ou string Le id dans datalistProps doit avoir la m\u00eame valeur que le list dans inputProps Le id dans inputProps doit avoir la m\u00eame valeur que le htmlFor dans labelProps","title":"DropDawDatalist"},{"location":"duidHtml/formContainers/#dropdawselect","text":"Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 import React , { Component } from \"react\" ; import { DropDawSelect , DuidStyle } from \"duidsystem-duidhtml\" ; class Main extends Component { constructor ( props ){ super ( props ); this . state = { optionItems : [ { value : \"math\" , optionItemProps : { label : \"math\" , disabled : \"\" , } }, { value : \"chimie\" , optionItemProps : { disabled : { true : true }, } }, { value : \"physique\" , optionItemProps : {} }, { value : \"histoire\" , optionItemProps : {} } ], selectProps : { id : \"cours\" }, labelProps : { htmlFor : \"cours\" , name : \"mes cours \" , } } } render (){ const { classes } = this . props ; return ( < div > < DuidDropDawSelect labelProps = { this . state . labelProps } labelStyle = { classes . label } optionItems = { this . state . optionItems } selectProps = { this . state . selectProps } selectStyle = { classes . select } /> < DuidStyle > { ` .label{ color: blue; } .select{ color: green; } ` } < /DuidStyle> < /div> ) } } export default Main ; Les props du composant DropDawSelect Props Valeurs ou Types labelProps un object de propri\u00e9t\u00e9s htmlFor et name optionItems une liste de object et chaque objet a value et optionItemProps selectProps un object de propri\u00e9t\u00e9 id selectStyle de type objet ou string labelStyle de type objet ou string Le id dans selectProps doit avoir la m\u00eame valeur que le htmlFor dans labelProps","title":"DropDawSelect"},{"location":"duidHtml/formContainers/#dropdawselectgroup","text":"Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 import React , { Component } from \"react\" ; import { DropDawSelectGroup , DuidStyle } from \"duidsystem-duidhtml\" ; class Main extends Component { constructor ( props ){ super ( props ); this . state = { optGroupItems : [ { groupId : 1 , groupProps : { label : \"science\" , }, optItems : [ { optId : 1 , value : \"math\" , optProps : {} }, { optId : 2 , value : \"chimie\" , optProps : { disabled : { true : true }, } }, ] }, { groupId : 2 , groupProps : { label : \"litt\u00e9rature\" , }, optItems : [ { optId : 1 , value : \"fran\u00e7ais\" , optProps : {} }, { optId : 2 , value : \"anglais\" , optProps : {} }, ] } ], selectProps : { name : \"cours\" , id : \"cours\" }, labelProps : { htmlFor : \"cours\" , name : \"mes cours \" } } } render (){ const { classes } = this . props ; return ( < div > < DropDawSelectGroup labelProps = { this . state . labelProps } labelStyle = \"label\" optGroupItems = { this . state . optGroupItems } selectProps = { this . state . selectProps } selectStyle = \"select\" /> < DuidStyle > { ` .label{ color: blue; } .select{ color: green; } ` } < /DuidStyle> < /div> ) } } export default Main ; Les props du composant DropDawSelectGroup Props Valeurs ou Types labelProps un object de propri\u00e9t\u00e9s htmlFor et name optGroupItems une liste de object et chaque objet a groupId , groupProp , optItems selectProps un object de propri\u00e9t\u00e9s id et name selectStyle de type objet ou string labelStyle de type objet ou string Le id dans selectProps doit avoir la m\u00eame valeur que le htmlFor dans labelProps","title":"DropDawSelectGroup"},{"location":"duidHtml/formContainers/#formfieldset","text":"Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 import React , { Component } from \"react\" ; import { FormFieldset , DuidStyle } from \"duidsystem-duidhtml\" ; class Main extends Component { constructor ( props ){ super ( props ); this . state = { fieldsetProps : { form : \"\" }, legendProps : { id : \"\" }, legendTitle : \"FormFieldset\" } } render (){ return ( < div > < FormFieldset fieldsetStyle = \"field\" fieldsetProps = { this . state . fieldsetProps } legendStyle = \"legend\" legendTitle = { this . state . legendTitle } legendProps = { this . state . legendProps } > < p > for test here < /p> < /FormFieldset> < DuidStyle > { ` .field{ color: blue; } .legend{ color: green; } ` } < /DuidStyle> < /div> ) } } export default Main ; Les props du composant FormFieldset Props Valeurs ou Types fieldsetProps un object de propri\u00e9t\u00e9s form , name et disabled legendProps un object de propri\u00e9t\u00e9s id legendTitle de type string fieldsetStyle de type objet ou string legendStyle de type objet ou string fieldsetProps et legendProps doivent avoir au moins un attribut m\u00eame si pas de valeur","title":"FormFieldset"},{"location":"duidHtml/formContainers/#inputbutton","text":"Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 import React , { Component } from \"react\" ; import { InputButton } from \"duidsystem-duidhtml\" ; import { withStyles } from '@material-ui/styles' ; const styles = { input : { color : 'blue' , } }; class Main extends Component { constructor ( props ){ super ( props ); this . state = { name : \"duidbtn\" , } } render (){ const { classes } = this . props ; return ( < div > < InputButton name = { this . state . name } style = { classes . input } /> < /div> ) } } export default withStyles ( styles )( Main ); Les props du composant InputButton Props Valeurs ou Types onClick de type function onBlur de type function onFocus de type function onSubmit de type function name de type string form de type string disabled de type bool\u00e9en autofocus de type bool\u00e9en style de type objet ou string","title":"InputButton"},{"location":"duidHtml/formContainers/#inputcheckbox","text":"Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 import React , { Component } from \"react\" ; import { InputCheckbox , DuidStyle } from \"duidsystem-duidhtml\" ; class Main extends Component { constructor ( props ){ super ( props ); this . state = { value : \"duid\" , labelProps : {} } } render (){ const { classes } = this . props ; return ( < div > < InputCheckbox value = { this . state . value } labelProps = { this . state . labelProps } style = \"checkbox\" /> < DuidStyle > { ` .checkbox{ color: green; } ` } < /DuidStyle> < /div> ) } } export default Main ; Les props du composant InputButton Props Valeurs ou Types onClick de type function onBlur de type function onFocus de type function name de type string value de type string form de type string disabled de type bool\u00e9en autofocus de type bool\u00e9en style de type objet ou string required de type bool\u00e9en checked de type bool\u00e9en labelProps de type objet","title":"InputCheckbox"},{"location":"duidHtml/formContainers/#inputcolor","text":"Exemple 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 import React , { Component } from \"react\" ; import { InputColor , DuidStyle } from \"duidsystem-duidhtml\" ; class Main extends Component { constructor ( props ){ super ( props ); this . state = { colorTitle : \"duid input colors \" , labelProps : { htmlFor : \"color\" } } } render (){ return ( < div > < InputColor colorTitle = { this . state . colorTitle } style = \"color\" labelProps = { this . state . labelProps } /> < DuidStyle > { ` .color{ color: green; } ` } < /DuidStyle> < /div> ) } } export default Main ; Les props du composant InputColor Props Valeurs ou Types name de type string value de type string form de type string disabled de type bool\u00e9en autofocus de type bool\u00e9en style de type objet ou string list de type string colorTitle de type String labelProps de type objet","title":"InputColor"},{"location":"duidModels/formContainers/","text":"formContainers","title":"FormContainers"},{"location":"duidModels/formContainers/#formcontainers","text":"","title":"formContainers"}]}