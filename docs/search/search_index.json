{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"duidSystem : Djedou UI Design System duidSystem is a customizable component library to build faster, beautiful, and more accessible React applications. How to install npm install duidsystem Example import { Container , Row , Col } from 'duidsystem/layout' ; function App () { return ( < Container styles = { styles } classes = {[ \"sm\" /*,\"djed\"*/ ]} > < Row xs = { 'auto' } styles = { rowStyles } md = { 3 } lg = { 2 } classes = {[ \"row_cols_auto\" ]} > < Col md = { 'auto' } sm = { 3 } > Aman < /Col> < /Row> < Row > < Col styles = { colStyles } classes = {[ \"col_sm_8\" ]} sm = { 8 } > sm = 8 < /Col> < Col sm = { 4 } > sm = 4 < /Col> < /Row> < Row > < Col sm > sm = true < /Col> < Col sm > sm = true < /Col> < Col sm > sm = true < /Col> < /Row> < Row > < Col span = \"true\" > span < /Col> < Col span = \"true\" > span < /Col> < Col span = \"true\" > span < /Col> < /Row> < /Container> ); } const styles = { sm : { //color: 'red', //backgroundColor: 'blue' }, djed : { color : 'blue' , backgroundColor : 'yellow' } }; const rowStyles = { row_cols_auto : { color : 'blue' , backgroundColor : 'green' } } const colStyles = { col_sm_8 : { '@media (min-width: 576px)' : { display : 'flex' , color : 'blue' , backgroundColor : 'green' , justifyContent : 'center' , //alignItems: 'center' } } } export default App ; How to style duidSystem Components I. Modify a predefined class col_sm_8 is a predefined class of component Col import { Container , Row , Col } from 'duidsystem/layout' ; function App () { return ( < Container > < Row > < Col styles = { colStyles } classes = {[ \"col_sm_8\" ]} > A predefined class is modified here < /Col> < Col sm = { 4 } > sm = 4 < /Col> < /Row> < /Container> ); } const colStyles = { col_sm_8 : { '@media (min-width: 576px)' : { display : 'flex' , color : 'blue' , backgroundColor : 'green' , justifyContent : 'center' , } } } export default App ; II. Create a new class for your style import { Container , Row , Col } from 'duidsystem/layout' ; function App () { return ( < Container styles = { styles } classes = {[ \"djed\" ]} > < Row > < Col md = { 'auto' } sm = { 3 } > Aman < /Col> < /Row> < /Container> ); } const styles = { djed : { color : 'blue' , backgroundColor : 'yellow' } } export default App ; Documentation duidsystem: Djedou UI Design System","title":"Home"},{"location":"#duidsystem-djedou-ui-design-system","text":"duidSystem is a customizable component library to build faster, beautiful, and more accessible React applications.","title":"duidSystem : Djedou UI Design System"},{"location":"#how-to-install","text":"npm install duidsystem","title":"How to install"},{"location":"#example","text":"import { Container , Row , Col } from 'duidsystem/layout' ; function App () { return ( < Container styles = { styles } classes = {[ \"sm\" /*,\"djed\"*/ ]} > < Row xs = { 'auto' } styles = { rowStyles } md = { 3 } lg = { 2 } classes = {[ \"row_cols_auto\" ]} > < Col md = { 'auto' } sm = { 3 } > Aman < /Col> < /Row> < Row > < Col styles = { colStyles } classes = {[ \"col_sm_8\" ]} sm = { 8 } > sm = 8 < /Col> < Col sm = { 4 } > sm = 4 < /Col> < /Row> < Row > < Col sm > sm = true < /Col> < Col sm > sm = true < /Col> < Col sm > sm = true < /Col> < /Row> < Row > < Col span = \"true\" > span < /Col> < Col span = \"true\" > span < /Col> < Col span = \"true\" > span < /Col> < /Row> < /Container> ); } const styles = { sm : { //color: 'red', //backgroundColor: 'blue' }, djed : { color : 'blue' , backgroundColor : 'yellow' } }; const rowStyles = { row_cols_auto : { color : 'blue' , backgroundColor : 'green' } } const colStyles = { col_sm_8 : { '@media (min-width: 576px)' : { display : 'flex' , color : 'blue' , backgroundColor : 'green' , justifyContent : 'center' , //alignItems: 'center' } } } export default App ;","title":"Example"},{"location":"#how-to-style-duidsystem-components","text":"","title":"How to style duidSystem Components"},{"location":"#i-modify-a-predefined-class","text":"col_sm_8 is a predefined class of component Col import { Container , Row , Col } from 'duidsystem/layout' ; function App () { return ( < Container > < Row > < Col styles = { colStyles } classes = {[ \"col_sm_8\" ]} > A predefined class is modified here < /Col> < Col sm = { 4 } > sm = 4 < /Col> < /Row> < /Container> ); } const colStyles = { col_sm_8 : { '@media (min-width: 576px)' : { display : 'flex' , color : 'blue' , backgroundColor : 'green' , justifyContent : 'center' , } } } export default App ;","title":"I. Modify a predefined class"},{"location":"#ii-create-a-new-class-for-your-style","text":"import { Container , Row , Col } from 'duidsystem/layout' ; function App () { return ( < Container styles = { styles } classes = {[ \"djed\" ]} > < Row > < Col md = { 'auto' } sm = { 3 } > Aman < /Col> < /Row> < /Container> ); } const styles = { djed : { color : 'blue' , backgroundColor : 'yellow' } } export default App ;","title":"II. Create a new class for your style"},{"location":"#documentation","text":"duidsystem: Djedou UI Design System","title":"Documentation"},{"location":"components/buttons/","text":"Button","title":"Buttons"},{"location":"components/buttons/#button","text":"","title":"Button"},{"location":"layout/col/","text":"Col The Col component lets you specify column widths across 6 breakpoint sizes ( xs , sm , md , lg , xl , and xxl ). For every breakpoint, you can specify the amount of columns to span. Col Props Props Types Descriptions styles objet provide a customed style object to add a new style or override exist one classes array of string specify the classes name xs number(1-12) or auto or { span: boolean|\"auto\"|number, offset: number, order: \"first\"|\"last\"|number } The number of columns to span on extra small devices (<5712px) sm number(1-12) or auto or { span: boolean|\"auto\"|number, offset: number, order: \"first\"|\"last\"|number } The number of columns to span on small devices (\u22655712px) md number(1-12) or auto or { span: boolean|\"auto\"|number, offset: number, order: \"first\"|\"last\"|number } The number of columns to span on medium devices (\u22657128px) lg number(1-12) or auto or { span: boolean|\"auto\"|number, offset: number, order: \"first\"|\"last\"|number } The number of columns to span on large devices (\u2265992px) xl number(1-12) or auto or { span: boolean|\"auto\"|number, offset: number, order: \"first\"|\"last\"|number } The number of columns to span on extra large devices (\u22651200px) xxl number(1-12) or auto or { span: boolean|\"auto\"|number, offset: number, order: \"first\"|\"last\"|number } The number of columns to span on extra large devices (\u22651400px) span true or false should span or not col a default class for col component that can be override. Activated if span=\"true\" Col predefined Classes Class Name Size number of columns col_auto xs col_1 xs 1 col_2 xs 2 col_3 xs 3 col_4 xs 4 col_5 xs 5 col_6 xs 6 col_7 xs 7 col_8 xs 8 col_9 xs 9 col_10 xs 10 col_11 xs 11 col_12 xs 12 offset_1 xs 1 offset_2 xs 2 offset_3 xs 3 offset_4 xs 4 offset_5 xs 5 offset_6 xs 6 offset_7 xs 7 offset_8 xs 8 offset_9 xs 9 offset_10 xs 10 offset_11 xs 11 order_first xs first order_0 xs 0 order_1 xs 1 order_2 xs 2 order_3 xs 3 order_4 xs 4 order_5 xs 5 order_last xs last col_sm sm col_sm_auto sm col_sm_1 sm 1 col_sm_2 sm 2 col_sm_3 sm 3 col_sm_4 sm 4 col_sm_5 sm 5 col_sm_6 sm 6 col_sm_7 sm 7 col_sm_8 sm 8 col_sm_9 sm 9 col_sm_10 sm 10 col_sm_11 sm 11 col_sm_12 sm 12 offset_sm_1 sm 1 offset_sm_2 sm 2 offset_sm_3 sm 3 offset_sm_4 sm 4 offset_sm_5 sm 5 offset_sm_6 sm 6 offset_sm_7 sm 7 offset_sm_8 sm 8 offset_sm_9 sm 9 offset_sm_10 sm 10 offset_sm_11 sm 11 order_sm_first sm first order_sm_0 sm 0 order_sm_1 sm 1 order_sm_2 sm 2 order_sm_3 sm 3 order_sm_4 sm 4 order_sm_5 sm 5 order_sm_last sm last col_md md col_md_auto md col_md_1 md 1 col_md_2 md 2 col_md_3 md 3 col_md_4 md 4 col_md_5 md 5 col_md_6 md 6 col_md_7 md 7 col_md_8 md 8 col_md_9 md 9 col_md_10 md 10 col_md_11 md 11 col_md_12 md 12 offset_md_1 md 1 offset_md_2 md 2 offset_md_3 md 3 offset_md_4 md 4 offset_md_5 md 5 offset_md_6 md 6 offset_md_7 md 7 offset_md_8 md 8 offset_md_9 md 9 offset_md_10 md 10 offset_md_11 md 11 order_md_first md first order_md_0 md 0 order_md_1 md 1 order_md_2 md 2 order_md_3 md 3 order_md_4 md 4 order_md_5 md 5 order_md_last md last col_lg lg col_lg_auto lg col_lg_1 lg 1 col_lg_2 lg 2 col_lg_3 lg 3 col_lg_4 lg 4 col_lg_5 lg 5 col_lg_6 lg 6 col_lg_7 lg 7 col_lg_8 lg 8 col_lg_9 lg 9 col_lg_10 lg 10 col_lg_11 lg 11 col_lg_12 lg 12 offset_lg_1 lg 1 offset_lg_2 lg 2 offset_lg_3 lg 3 offset_lg_4 lg 4 offset_lg_5 lg 5 offset_lg_6 lg 6 offset_lg_7 lg 7 offset_lg_8 lg 8 offset_lg_9 lg 9 offset_lg_10 lg 10 offset_lg_11 lg 11 order_lg_first lg first order_lg_0 lg 0 order_lg_1 lg 1 order_lg_2 lg 2 order_lg_3 lg 3 order_lg_4 lg 4 order_lg_5 lg 5 order_lg_last lg last col_xl xl col_xl_auto xl col_xl_1 xl 1 col_xl_2 xl 2 col_xl_3 xl 3 col_xl_4 xl 4 col_xl_5 xl 5 col_xl_6 xl 6 col_xl_7 xl 7 col_xl_8 xl 8 col_xl_9 xl 9 col_xl_10 xl 10 col_xl_11 xl 11 col_xl_12 xl 12 offset_xl_1 xl 1 offset_xl_2 xl 2 offset_xl_3 xl 3 offset_xl_4 xl 4 offset_xl_5 xl 5 offset_xl_6 xl 6 offset_xl_7 xl 7 offset_xl_8 xl 8 offset_xl_9 xl 9 offset_xl_10 xl 10 offset_xl_11 xl 11 order_xl_first xl first order_xl_0 xl 0 order_xl_1 xl 1 order_xl_2 xl 2 order_xl_3 xl 3 order_xl_4 xl 4 order_xl_5 xl 5 order_xl_last xl last col_xxl xxl col_xxl_auto xxl col_xxl_1 xxl 1 col_xxl_2 xxl 2 col_xxl_3 xxl 3 col_xxl_4 xxl 4 col_xxl_5 xxl 5 col_xxl_6 xxl 6 col_xxl_7 xxl 7 col_xxl_8 xxl 8 col_xxl_9 xxl 9 col_xxl_10 xxl 10 col_xxl_11 xxl 11 col_xxl_12 xxl 12 offset_xxl_1 xxl 1 offset_xxl_2 xxl 2 offset_xxl_3 xxl 3 offset_xxl_4 xxl 4 offset_xxl_5 xxl 5 offset_xxl_6 xxl 6 offset_xxl_7 xxl 7 offset_xxl_8 xxl 8 offset_xxl_9 xxl 9 offset_xxl_10 xxl 10 offset_xxl_11 xxl 11 order_xxl_first xxl first order_xxl_0 xxl 0 order_xxl_1 xxl 1 order_xxl_2 xxl 2 order_xxl_3 xxl 3 order_xxl_4 xxl 4 order_xxl_5 xxl 5 order_xxl_last xxl last col Exemple import { Container , Row , Col } from 'duidsystem/layout' ; function Comp () { return ( < Container > < Row > < Col md = { 'auto' } sm = { 3 } > Aman < /Col> < /Row> < Row > < Col styles = { colStyles } classes = {[ \"col_sm_8\" ]} sm = { 8 } > sm = 8 < /Col> < Col sm = { 4 } > sm = 4 < /Col> < /Row> < Row > < Col sm > sm = true < /Col> < Col sm > sm = true < /Col> < Col sm > sm = true < /Col> < /Row> < Row > < Col span = \"true\" > span < /Col> < Col span = \"true\" > span < /Col> < Col span = \"true\" > span < /Col> < /Row> < /Container> ); } const colStyles = { col_sm_8 : { '@media (min-width: 576px)' : { display : 'flex' , color : 'blue' , backgroundColor : 'green' , justifyContent : 'center' } } } export default Comp ;","title":"Col"},{"location":"layout/col/#col","text":"The Col component lets you specify column widths across 6 breakpoint sizes ( xs , sm , md , lg , xl , and xxl ). For every breakpoint, you can specify the amount of columns to span. Col Props Props Types Descriptions styles objet provide a customed style object to add a new style or override exist one classes array of string specify the classes name xs number(1-12) or auto or { span: boolean|\"auto\"|number, offset: number, order: \"first\"|\"last\"|number } The number of columns to span on extra small devices (<5712px) sm number(1-12) or auto or { span: boolean|\"auto\"|number, offset: number, order: \"first\"|\"last\"|number } The number of columns to span on small devices (\u22655712px) md number(1-12) or auto or { span: boolean|\"auto\"|number, offset: number, order: \"first\"|\"last\"|number } The number of columns to span on medium devices (\u22657128px) lg number(1-12) or auto or { span: boolean|\"auto\"|number, offset: number, order: \"first\"|\"last\"|number } The number of columns to span on large devices (\u2265992px) xl number(1-12) or auto or { span: boolean|\"auto\"|number, offset: number, order: \"first\"|\"last\"|number } The number of columns to span on extra large devices (\u22651200px) xxl number(1-12) or auto or { span: boolean|\"auto\"|number, offset: number, order: \"first\"|\"last\"|number } The number of columns to span on extra large devices (\u22651400px) span true or false should span or not col a default class for col component that can be override. Activated if span=\"true\" Col predefined Classes Class Name Size number of columns col_auto xs col_1 xs 1 col_2 xs 2 col_3 xs 3 col_4 xs 4 col_5 xs 5 col_6 xs 6 col_7 xs 7 col_8 xs 8 col_9 xs 9 col_10 xs 10 col_11 xs 11 col_12 xs 12 offset_1 xs 1 offset_2 xs 2 offset_3 xs 3 offset_4 xs 4 offset_5 xs 5 offset_6 xs 6 offset_7 xs 7 offset_8 xs 8 offset_9 xs 9 offset_10 xs 10 offset_11 xs 11 order_first xs first order_0 xs 0 order_1 xs 1 order_2 xs 2 order_3 xs 3 order_4 xs 4 order_5 xs 5 order_last xs last col_sm sm col_sm_auto sm col_sm_1 sm 1 col_sm_2 sm 2 col_sm_3 sm 3 col_sm_4 sm 4 col_sm_5 sm 5 col_sm_6 sm 6 col_sm_7 sm 7 col_sm_8 sm 8 col_sm_9 sm 9 col_sm_10 sm 10 col_sm_11 sm 11 col_sm_12 sm 12 offset_sm_1 sm 1 offset_sm_2 sm 2 offset_sm_3 sm 3 offset_sm_4 sm 4 offset_sm_5 sm 5 offset_sm_6 sm 6 offset_sm_7 sm 7 offset_sm_8 sm 8 offset_sm_9 sm 9 offset_sm_10 sm 10 offset_sm_11 sm 11 order_sm_first sm first order_sm_0 sm 0 order_sm_1 sm 1 order_sm_2 sm 2 order_sm_3 sm 3 order_sm_4 sm 4 order_sm_5 sm 5 order_sm_last sm last col_md md col_md_auto md col_md_1 md 1 col_md_2 md 2 col_md_3 md 3 col_md_4 md 4 col_md_5 md 5 col_md_6 md 6 col_md_7 md 7 col_md_8 md 8 col_md_9 md 9 col_md_10 md 10 col_md_11 md 11 col_md_12 md 12 offset_md_1 md 1 offset_md_2 md 2 offset_md_3 md 3 offset_md_4 md 4 offset_md_5 md 5 offset_md_6 md 6 offset_md_7 md 7 offset_md_8 md 8 offset_md_9 md 9 offset_md_10 md 10 offset_md_11 md 11 order_md_first md first order_md_0 md 0 order_md_1 md 1 order_md_2 md 2 order_md_3 md 3 order_md_4 md 4 order_md_5 md 5 order_md_last md last col_lg lg col_lg_auto lg col_lg_1 lg 1 col_lg_2 lg 2 col_lg_3 lg 3 col_lg_4 lg 4 col_lg_5 lg 5 col_lg_6 lg 6 col_lg_7 lg 7 col_lg_8 lg 8 col_lg_9 lg 9 col_lg_10 lg 10 col_lg_11 lg 11 col_lg_12 lg 12 offset_lg_1 lg 1 offset_lg_2 lg 2 offset_lg_3 lg 3 offset_lg_4 lg 4 offset_lg_5 lg 5 offset_lg_6 lg 6 offset_lg_7 lg 7 offset_lg_8 lg 8 offset_lg_9 lg 9 offset_lg_10 lg 10 offset_lg_11 lg 11 order_lg_first lg first order_lg_0 lg 0 order_lg_1 lg 1 order_lg_2 lg 2 order_lg_3 lg 3 order_lg_4 lg 4 order_lg_5 lg 5 order_lg_last lg last col_xl xl col_xl_auto xl col_xl_1 xl 1 col_xl_2 xl 2 col_xl_3 xl 3 col_xl_4 xl 4 col_xl_5 xl 5 col_xl_6 xl 6 col_xl_7 xl 7 col_xl_8 xl 8 col_xl_9 xl 9 col_xl_10 xl 10 col_xl_11 xl 11 col_xl_12 xl 12 offset_xl_1 xl 1 offset_xl_2 xl 2 offset_xl_3 xl 3 offset_xl_4 xl 4 offset_xl_5 xl 5 offset_xl_6 xl 6 offset_xl_7 xl 7 offset_xl_8 xl 8 offset_xl_9 xl 9 offset_xl_10 xl 10 offset_xl_11 xl 11 order_xl_first xl first order_xl_0 xl 0 order_xl_1 xl 1 order_xl_2 xl 2 order_xl_3 xl 3 order_xl_4 xl 4 order_xl_5 xl 5 order_xl_last xl last col_xxl xxl col_xxl_auto xxl col_xxl_1 xxl 1 col_xxl_2 xxl 2 col_xxl_3 xxl 3 col_xxl_4 xxl 4 col_xxl_5 xxl 5 col_xxl_6 xxl 6 col_xxl_7 xxl 7 col_xxl_8 xxl 8 col_xxl_9 xxl 9 col_xxl_10 xxl 10 col_xxl_11 xxl 11 col_xxl_12 xxl 12 offset_xxl_1 xxl 1 offset_xxl_2 xxl 2 offset_xxl_3 xxl 3 offset_xxl_4 xxl 4 offset_xxl_5 xxl 5 offset_xxl_6 xxl 6 offset_xxl_7 xxl 7 offset_xxl_8 xxl 8 offset_xxl_9 xxl 9 offset_xxl_10 xxl 10 offset_xxl_11 xxl 11 order_xxl_first xxl first order_xxl_0 xxl 0 order_xxl_1 xxl 1 order_xxl_2 xxl 2 order_xxl_3 xxl 3 order_xxl_4 xxl 4 order_xxl_5 xxl 5 order_xxl_last xxl last col Exemple import { Container , Row , Col } from 'duidsystem/layout' ; function Comp () { return ( < Container > < Row > < Col md = { 'auto' } sm = { 3 } > Aman < /Col> < /Row> < Row > < Col styles = { colStyles } classes = {[ \"col_sm_8\" ]} sm = { 8 } > sm = 8 < /Col> < Col sm = { 4 } > sm = 4 < /Col> < /Row> < Row > < Col sm > sm = true < /Col> < Col sm > sm = true < /Col> < Col sm > sm = true < /Col> < /Row> < Row > < Col span = \"true\" > span < /Col> < Col span = \"true\" > span < /Col> < Col span = \"true\" > span < /Col> < /Row> < /Container> ); } const colStyles = { col_sm_8 : { '@media (min-width: 576px)' : { display : 'flex' , color : 'blue' , backgroundColor : 'green' , justifyContent : 'center' } } } export default Comp ;","title":"Col"},{"location":"layout/container/","text":"Container Container component provide a means to center and horizontally pad your site\u2019s contents. Use Container for a responsive pixel width. Container Props Props Types Descriptions styles objet provide a customed style object to add a new style or override exist one classes array of string specify the classes name Container predefined Classes Class Name Descriptions fluid width: '100%' and no media query sm '@media (min-width: 576px)' md '@media (min-width: 768px)' lg '@media (min-width: 992px)' xl '@media (min-width: 1200px)' xxl '@media (min-width: 1400px)' Exemple import { Container , Row , Col } from 'duidsystem/layout' ; function Comp () { return ( < Container styles = { styles } classes = {[ \"sm\" ]} > < Row > < Col sm > sm = true < /Col> < Col sm > sm = true < /Col> < Col sm > sm = true < /Col> < /Row> < Row > < Col span = \"true\" > span < /Col> < Col span = \"true\" > span < /Col> < Col span = \"true\" > span < /Col> < /Row> < /Container> ); } const styles = { sm : { color : 'red' , backgroundColor : 'blue' }, djed : { color : 'blue' , backgroundColor : 'yellow' } }; export default Comp ;","title":"Container"},{"location":"layout/container/#container","text":"Container component provide a means to center and horizontally pad your site\u2019s contents. Use Container for a responsive pixel width. Container Props Props Types Descriptions styles objet provide a customed style object to add a new style or override exist one classes array of string specify the classes name Container predefined Classes Class Name Descriptions fluid width: '100%' and no media query sm '@media (min-width: 576px)' md '@media (min-width: 768px)' lg '@media (min-width: 992px)' xl '@media (min-width: 1200px)' xxl '@media (min-width: 1400px)' Exemple import { Container , Row , Col } from 'duidsystem/layout' ; function Comp () { return ( < Container styles = { styles } classes = {[ \"sm\" ]} > < Row > < Col sm > sm = true < /Col> < Col sm > sm = true < /Col> < Col sm > sm = true < /Col> < /Row> < Row > < Col span = \"true\" > span < /Col> < Col span = \"true\" > span < /Col> < Col span = \"true\" > span < /Col> < /Row> < /Container> ); } const styles = { sm : { color : 'red' , backgroundColor : 'blue' }, djed : { color : 'blue' , backgroundColor : 'yellow' } }; export default Comp ;","title":"Container"},{"location":"layout/row/","text":"Row The Row component lets you specify column widths across 6 breakpoint sizes ( xs , sm , md , lg , xl , and xxl ). For every breakpoint, you can specify the amount of columns that will fit next to each other. Row Props Props Types Descriptions styles objet provide a customed style object to add a new style or override exist one classes array of string specify the classes name xs number(1-6) or auto The number of columns that will fit next to each other on extra small devices (<576px) sm number(1-6) or auto The number of columns that will fit next to each other on small devices (\u2265576px) md number(1-6) or auto The number of columns that will fit next to each other on medium devices (\u2265768px) lg number(1-6) or auto The number of columns that will fit next to each other on large devices (\u2265992px) xl number(1-6) or auto The number of columns that will fit next to each other on extra large devices (\u22651200px) xxl number(1-6) or auto The number of columns that will fit next to each other on extra large devices (\u22651400px) row a default class for row component that can be override Row predefined Classes Class Name Size number of columns row_cols_auto xs row_cols_1 xs 1 row_cols_2 xs 2 row_cols_3 xs 3 row_cols_4 xs 4 row_cols_5 xs 5 row_cols_6 xs 6 row_cols_sm_auto sm row_cols_sm_1 sm 1 row_cols_sm_2 sm 2 row_cols_sm_3 sm 3 row_cols_sm_4 sm 4 row_cols_sm_5 sm 5 row_cols_sm_6 sm 6 row_cols_md_auto md row_cols_md_1 md 1 row_cols_md_2 md 2 row_cols_md_3 md 3 row_cols_md_4 md 4 row_cols_md_5 md 5 row_cols_md_6 md 6 row_cols_lg_auto lg row_cols_lg_1 lg 1 row_cols_lg_2 lg 2 row_cols_lg_3 lg 3 row_cols_lg_4 lg 4 row_cols_lg_5 lg 5 row_cols_lg_6 lg 6 row_cols_xl_auto xl row_cols_xl_1 xl 1 row_cols_xl_2 xl 2 row_cols_xl_3 xl 3 row_cols_xl_4 xl 4 row_cols_xl_5 xl 5 row_cols_xl_6 xl 6 row_cols_xxl_auto xxl row_cols_xxl_1 xxl 1 row_cols_xxl_2 xxl 2 row_cols_xxl_3 xxl 3 row_cols_xxl_4 xxl 4 row_cols_xxl_5 xxl 5 row_cols_xxl_6 xxl 6 row Exemple import { Container , Row , Col } from 'duidsystem/layout' ; function Comp () { return ( < Container > < Row xs = { 'auto' } styles = { rowStyles } md = { 3 } lg = { 2 } classes = {[ \"row_cols_auto\" ]} > < Col md = { 'auto' } sm = { 3 } > Aman < /Col> < /Row> < /Container> ); } const rowStyles = { row_cols_auto : { color : 'blue' , backgroundColor : 'green' } } export default Comp ;","title":"Row"},{"location":"layout/row/#row","text":"The Row component lets you specify column widths across 6 breakpoint sizes ( xs , sm , md , lg , xl , and xxl ). For every breakpoint, you can specify the amount of columns that will fit next to each other. Row Props Props Types Descriptions styles objet provide a customed style object to add a new style or override exist one classes array of string specify the classes name xs number(1-6) or auto The number of columns that will fit next to each other on extra small devices (<576px) sm number(1-6) or auto The number of columns that will fit next to each other on small devices (\u2265576px) md number(1-6) or auto The number of columns that will fit next to each other on medium devices (\u2265768px) lg number(1-6) or auto The number of columns that will fit next to each other on large devices (\u2265992px) xl number(1-6) or auto The number of columns that will fit next to each other on extra large devices (\u22651200px) xxl number(1-6) or auto The number of columns that will fit next to each other on extra large devices (\u22651400px) row a default class for row component that can be override Row predefined Classes Class Name Size number of columns row_cols_auto xs row_cols_1 xs 1 row_cols_2 xs 2 row_cols_3 xs 3 row_cols_4 xs 4 row_cols_5 xs 5 row_cols_6 xs 6 row_cols_sm_auto sm row_cols_sm_1 sm 1 row_cols_sm_2 sm 2 row_cols_sm_3 sm 3 row_cols_sm_4 sm 4 row_cols_sm_5 sm 5 row_cols_sm_6 sm 6 row_cols_md_auto md row_cols_md_1 md 1 row_cols_md_2 md 2 row_cols_md_3 md 3 row_cols_md_4 md 4 row_cols_md_5 md 5 row_cols_md_6 md 6 row_cols_lg_auto lg row_cols_lg_1 lg 1 row_cols_lg_2 lg 2 row_cols_lg_3 lg 3 row_cols_lg_4 lg 4 row_cols_lg_5 lg 5 row_cols_lg_6 lg 6 row_cols_xl_auto xl row_cols_xl_1 xl 1 row_cols_xl_2 xl 2 row_cols_xl_3 xl 3 row_cols_xl_4 xl 4 row_cols_xl_5 xl 5 row_cols_xl_6 xl 6 row_cols_xxl_auto xxl row_cols_xxl_1 xxl 1 row_cols_xxl_2 xxl 2 row_cols_xxl_3 xxl 3 row_cols_xxl_4 xxl 4 row_cols_xxl_5 xxl 5 row_cols_xxl_6 xxl 6 row Exemple import { Container , Row , Col } from 'duidsystem/layout' ; function Comp () { return ( < Container > < Row xs = { 'auto' } styles = { rowStyles } md = { 3 } lg = { 2 } classes = {[ \"row_cols_auto\" ]} > < Col md = { 'auto' } sm = { 3 } > Aman < /Col> < /Row> < /Container> ); } const rowStyles = { row_cols_auto : { color : 'blue' , backgroundColor : 'green' } } export default Comp ;","title":"Row"}]}